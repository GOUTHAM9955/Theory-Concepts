git init >> to create .git in the directory (This will track all the updates)

git status >> To find the updates files

git add filename or (.)>> to add individual file or multiple files in a single go we can use command 
git commit -m "comments" >> to commit the files
git branch -m main >> to add branch (If we don't give name it will commit to master branch)
git remote add origin url >> Url of remote repository we want to connect
git push -u origin master >> To push all the changes to the repository

to make changes
>> git add.
>> git commit -m
>> git push 


To remove git directory: rm -rf .git


To update the Personal Access Token:
	1. Log in to GitHub:
   - Go to the GitHub website (github.com) and log in to your GitHub account.

2. Access Personal Access Tokens Settings:
   - Click on your profile picture in the top-right corner of the screen.
   - Select "Settings" from the dropdown menu.
   - In the left sidebar, click on "Developer settings" and then choose "Personal access tokens".

3. Generate a New Token:
   - Click on the "Generate new token" button.
   - Provide a descriptive note for the token to remember its purpose.
   - Select the desired scopes or permissions for the token.
     - For pushing changes, you may need to select the "repo" or "public_repo" scope.
   - Once you've selected the appropriate settings, click on the "Generate token" button.

4. Copy the Token:
   - After generating the token, GitHub will display it on the screen.
   - **Important**: This token is only shown once, so make sure to copy it to a safe location.

5. Use the Token for Pushing Changes:
   - Open your Git client or command line interface.
   - Navigate to the local repository where you want to push changes.
   - Instead of using your GitHub password, use the generated personal access token as the password when prompted.
     - For example, when pushing changes via HTTPS, the command will prompt for username and password. Enter your GitHub username and the personal access token as the password.
     - If you're using SSH, make sure to update your Git remote URL to use the SSH URL instead of HTTPS.
     EX: Token: #####
		Command: git remote set-url origin https://########@github.com/GOUTHAM9955/OOPS
		git remote set-url origin https://TOKEN@github.com/myusername/myrepo



By following these steps, you can generate a personal access token in GitHub and use it to push changes using Git. Remember to keep your personal access token secure and avoid sharing it with others to maintain the security of your GitHub account.
